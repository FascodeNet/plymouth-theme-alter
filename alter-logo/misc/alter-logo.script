# BACKGROUND COLOR
Window.SetBackgroundTopColor(0, 0, 0);
Window.SetBackgroundBottomColor(0, 0, 0);

# LOGO
logo.image = Image("intro-157.png");
logo.sprite = Sprite(logo.image);
logo.sprite.SetOpacity(0);
logo.x = Window.GetX() + Window.GetWidth() / 2 - logo.image.GetWidth() / 2;
logo.y = Window.GetY() + Window.GetHeight() / 2 - logo.image.GetHeight() / 2;
logo.sprite.SetPosition(logo.x, logo.y, 100);

# IMAGE SPRITE
intro_image_total = 157;
loop_image_total = 123;
#     intro
for (i = 1; i <= intro_image_total; i++) {
    intro[i].image = Image("intro-" + i + ".png");
    intro[i].sprite = Sprite(intro[i].image);
    intro[i].sprite.SetOpacity(0);
    intro[i].sprite.SetPosition(logo.x, logo.y, 0);
}
#     loop
for (i = 1; i <= loop_image_total; i++) {
    loop[i].image = Image("loop-" + i + ".png");
    loop[i].sprite = Sprite(loop[i].image);
    loop[i].sprite.SetOpacity(0);
    loop[i].sprite.SetPosition(logo.x, logo.y, 0);
}

# ANIMATION
i = 1;
l = 1;
fun animation_callback() {
    if (l == loop_image_total) {
        loop[l].sprite.SetOpacity(0);
        l = 1;
    }
    if (i < intro_image_total) {
        intro[i].sprite.SetOpacity(0);
        i++;
        intro[i].sprite.SetOpacity(1);
    } else {
        loop[l].sprite.SetOpacity(0);
        l++;
        loop[l].sprite.SetOpacity(1);
    }
}

# CALLBACK
if (Plymouth.GetMode() == "boot") {
    Plymouth.SetRefreshFunction(animation_callback);
} else {
    i = intro_image_total;
    Plymouth.SetRefreshFunction(animation_callback);
}
Plymouth.SetQuitFunction(animation_callback);

# DIALOGUE

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetY() + Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);
